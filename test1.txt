LOC 30;
; ===== Input 20 numbers =====
IN 3,0;
STR 3,0,7;
IN 3,0;
STR 3,0,8;
IN 3,0;
STR 3,0,9;
IN 3,0;
STR 3,0,10;
IN 3,0;
STR 3,0,11;
IN 3,0;
STR 3,0,12;
IN 3,0;
STR 3,0,13;
IN 3,0;
STR 3,0,14;
IN 3,0;
STR 3,0,15;
IN 3,0;
STR 3,0,16;
IN 3,0;
STR 3,0,17;
IN 3,0;
STR 3,0,18;
IN 3,0;
STR 3,0,19;
IN 3,0;
STR 3,0,20;
IN 3,0;
STR 3,0,21;
IN 3,0;
STR 3,0,22;
IN 3,0;
STR 3,0,23;
IN 3,0;
STR 3,0,24;
IN 3,0;
STR 3,0,25;
IN 3,0;
STR 3,0,26;

; ===== Input target number =====
IN 3,0;
STR 3,0,27;          ; target = R3

; ===== Initialize =====
LDR 1,0,7;           ; R1 = first number
LDR 2,0,27;          ; R2 = target
STR 2,0,100;         ; temp store target
SMR 2,0,7;           ; R2 = target - number
JGE 2,0,77;          ; if positive, skip neg
LDA 3,0;             ; R3 = 0
SMR 3,0,27;          ; R3 = 0 - R2 (make positive)
STR 3,0,28;          ; min_diff = abs(target - first)
JGE 0,0,78;
STR 2,0,28;          ; if not neg, just use R2
78: STR 1,0,29;      ; closest = first number

; ===== Loop setup =====
LDA 4,8;             ; R4 = current address = 8

; ===== Compare next numbers =====
80: LDR 1,4,0;       ; R1 = next number
LDR 2,0,27;          ; R2 = target
STR 2,0,100;         ; temp store target
SMR 2,4,0;           ; R2 = target - current number
JGE 2,0,84;          ; if >=0 skip neg
LDA 3,0;             ; R3 = 0
SMR 3,0,100;         ; R3 = 0 - R2 (abs)
STR 3,0,101;         ; store abs diff
JGE 0,0,85;
84: STR 2,0,101;     ; store abs diff if positive
85: LDR 5,0,28;      ; R5 = min_diff
LDR 6,0,101;         ; R6 = current diff
SMR 6,0,28;          ; R6 = diff - min_diff
JGE 6,0,89;          ; if diff >= min_diff skip update
LDR 3,0,101;         ; R3 = new diff
STR 3,0,28;          ; min_diff = new diff
STR 1,0,29;          ; closest = current
89: AIR 4,1;         ; move to next input address
SIR 4,27;            ; subtract 27 to check end
JNE 4,0,80;          ; loop until reach address 27

; ===== Output closest =====
LDR 1,0,29;          ; load closest
OUT 1,0;             ; print
HLT;                 ; halt
